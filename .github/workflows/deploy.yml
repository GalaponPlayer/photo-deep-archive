name: Deploy-Api

on:
  push:
    branches:
      - "master"
  workflow_dispatch:

env:
  TEMPLATE_FILE: backend/deploy/api-sam-template.yml

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      # - name: Build Go Lambda Function in Amazon Linux 2
      #   run: |
      #     docker run --rm -v "$PWD":/go/src/app -w /go/src/app/backend/src/lambda_handler/api_for_public golang:1.21-amazonlinux2 \
      #     go build -o bootstrap
      #     zip main.zip bootstrap
      - name: Build Go Lambda Function
        run: |
          cd backend/src/lambda_handler/api_for_public
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o bootstrap
          zip main.zip bootstrap
      - name: Setup aws-sam
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{secrets.AWS_REGION_PROD}}
          role-to-assume: ${{secrets.IAM_ROLE_ARN}}

      - run: aws sts get-caller-identity

      - name: Retrieve secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            COGNITO, ${{secrets.SECRETS_COGNITO_ARN}}
          name-transformation: uppercase
          parse-json-secrets: true

      - name: Build & Deploy Cloudformation stacks
        run: |
          sam build --template-file ${TEMPLATE_FILE}
          sam deploy --template-file ${TEMPLATE_FILE} --stack-name apiForPublic --no-confirm-changeset --no-fail-on-empty-changeset --s3-bucket ${{secrets.S3_BUCKET_NAME_PROD}} --capabilities CAPABILITY_IAM --parameter-overrides CognitoUserPoolId=${COGNITO_USER_POOL_ID} CognitoAppClientId=${COGNITO_APP_CLIENT_ID}
